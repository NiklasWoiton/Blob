// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from messages.proto</summary>
public static partial class MessagesReflection {

  #region Descriptor
  /// <summary>File descriptor for messages.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MessagesReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cg5tZXNzYWdlcy5wcm90byJBCgpTcGF3bkVuZW15EhgKBHdoYXQYASABKA4y",
          "Ci5FbmVteVR5cGUSGQoFd2hlcmUYAiABKA4yCi5TcGF3bkFyZWEiTQocQ2xp",
          "ZW50VG9TZXJ2ZXJNZXNzYWdlV3JhcHBlchIiCgtzcGF3bl9lbmVteRgBIAEo",
          "CzILLlNwYXduRW5lbXlIAEIJCgdtZXNzYWdlKhYKCUVuZW15VHlwZRIJCgVE",
          "Uk9ORRAAKiAKCVNwYXduQXJlYRIICgRMRUZUEAASCQoFUklHSFQQAWIGcHJv",
          "dG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(new[] {typeof(global::EnemyType), typeof(global::SpawnArea), }, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::SpawnEnemy), global::SpawnEnemy.Parser, new[]{ "What", "Where" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ClientToServerMessageWrapper), global::ClientToServerMessageWrapper.Parser, new[]{ "SpawnEnemy" }, new[]{ "Message" }, null, null)
        }));
  }
  #endregion

}
#region Enums
public enum EnemyType {
  [pbr::OriginalName("DRONE")] Drone = 0,
}

public enum SpawnArea {
  [pbr::OriginalName("LEFT")] Left = 0,
  [pbr::OriginalName("RIGHT")] Right = 1,
}

#endregion

#region Messages
public sealed partial class SpawnEnemy : pb::IMessage<SpawnEnemy> {
  private static readonly pb::MessageParser<SpawnEnemy> _parser = new pb::MessageParser<SpawnEnemy>(() => new SpawnEnemy());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SpawnEnemy> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SpawnEnemy() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SpawnEnemy(SpawnEnemy other) : this() {
    what_ = other.what_;
    where_ = other.where_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SpawnEnemy Clone() {
    return new SpawnEnemy(this);
  }

  /// <summary>Field number for the "what" field.</summary>
  public const int WhatFieldNumber = 1;
  private global::EnemyType what_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::EnemyType What {
    get { return what_; }
    set {
      what_ = value;
    }
  }

  /// <summary>Field number for the "where" field.</summary>
  public const int WhereFieldNumber = 2;
  private global::SpawnArea where_ = 0;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SpawnArea Where {
    get { return where_; }
    set {
      where_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SpawnEnemy);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SpawnEnemy other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (What != other.What) return false;
    if (Where != other.Where) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (What != 0) hash ^= What.GetHashCode();
    if (Where != 0) hash ^= Where.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (What != 0) {
      output.WriteRawTag(8);
      output.WriteEnum((int) What);
    }
    if (Where != 0) {
      output.WriteRawTag(16);
      output.WriteEnum((int) Where);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (What != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) What);
    }
    if (Where != 0) {
      size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Where);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SpawnEnemy other) {
    if (other == null) {
      return;
    }
    if (other.What != 0) {
      What = other.What;
    }
    if (other.Where != 0) {
      Where = other.Where;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          what_ = (global::EnemyType) input.ReadEnum();
          break;
        }
        case 16: {
          where_ = (global::SpawnArea) input.ReadEnum();
          break;
        }
      }
    }
  }

}

public sealed partial class ClientToServerMessageWrapper : pb::IMessage<ClientToServerMessageWrapper> {
  private static readonly pb::MessageParser<ClientToServerMessageWrapper> _parser = new pb::MessageParser<ClientToServerMessageWrapper>(() => new ClientToServerMessageWrapper());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ClientToServerMessageWrapper> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MessagesReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientToServerMessageWrapper() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientToServerMessageWrapper(ClientToServerMessageWrapper other) : this() {
    switch (other.MessageCase) {
      case MessageOneofCase.SpawnEnemy:
        SpawnEnemy = other.SpawnEnemy.Clone();
        break;
    }

    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ClientToServerMessageWrapper Clone() {
    return new ClientToServerMessageWrapper(this);
  }

  /// <summary>Field number for the "spawn_enemy" field.</summary>
  public const int SpawnEnemyFieldNumber = 1;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::SpawnEnemy SpawnEnemy {
    get { return messageCase_ == MessageOneofCase.SpawnEnemy ? (global::SpawnEnemy) message_ : null; }
    set {
      message_ = value;
      messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.SpawnEnemy;
    }
  }

  private object message_;
  /// <summary>Enum of possible cases for the "message" oneof.</summary>
  public enum MessageOneofCase {
    None = 0,
    SpawnEnemy = 1,
  }
  private MessageOneofCase messageCase_ = MessageOneofCase.None;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public MessageOneofCase MessageCase {
    get { return messageCase_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void ClearMessage() {
    messageCase_ = MessageOneofCase.None;
    message_ = null;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ClientToServerMessageWrapper);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ClientToServerMessageWrapper other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!object.Equals(SpawnEnemy, other.SpawnEnemy)) return false;
    if (MessageCase != other.MessageCase) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (messageCase_ == MessageOneofCase.SpawnEnemy) hash ^= SpawnEnemy.GetHashCode();
    hash ^= (int) messageCase_;
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (messageCase_ == MessageOneofCase.SpawnEnemy) {
      output.WriteRawTag(10);
      output.WriteMessage(SpawnEnemy);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (messageCase_ == MessageOneofCase.SpawnEnemy) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpawnEnemy);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ClientToServerMessageWrapper other) {
    if (other == null) {
      return;
    }
    switch (other.MessageCase) {
      case MessageOneofCase.SpawnEnemy:
        if (SpawnEnemy == null) {
          SpawnEnemy = new global::SpawnEnemy();
        }
        SpawnEnemy.MergeFrom(other.SpawnEnemy);
        break;
    }

    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          global::SpawnEnemy subBuilder = new global::SpawnEnemy();
          if (messageCase_ == MessageOneofCase.SpawnEnemy) {
            subBuilder.MergeFrom(SpawnEnemy);
          }
          input.ReadMessage(subBuilder);
          SpawnEnemy = subBuilder;
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
